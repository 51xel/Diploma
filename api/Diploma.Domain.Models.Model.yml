### YamlMime:ManagedReference
items:
- uid: Diploma.Domain.Models.Model
  commentId: T:Diploma.Domain.Models.Model
  id: Model
  parent: Diploma.Domain.Models
  children:
  - Diploma.Domain.Models.Model.#ctor
  - Diploma.Domain.Models.Model.#ctor(System.String,Diploma.Domain.Models.ModelType,Diploma.Domain.Models.TrainingTimeRange,System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm},System.Nullable{System.Guid})
  - Diploma.Domain.Models.Model.Algorithms
  - Diploma.Domain.Models.Model.Id
  - Diploma.Domain.Models.Model.Name
  - Diploma.Domain.Models.Model.TrainingTime
  - Diploma.Domain.Models.Model.Type
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Model
  fullName: Diploma.Domain.Models.Model
  type: Class
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Model
    path: Diploma.Domain/Models/Model.cs
    startLine: 7
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Represents a machine learning with associated algorithms.
  example: []
  syntax:
    content: public class Model
    content.vb: Public Class Model
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Diploma.Domain.Models.Model.Id
  commentId: P:Diploma.Domain.Models.Model.Id
  id: Id
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Model.Id
  fullName: Diploma.Domain.Models.Model.Id
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Id
    path: Diploma.Domain/Models/Model.cs
    startLine: 12
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the unique identifier of the model
  example: []
  syntax:
    content: public Guid Id { get; init; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property Id As Guid
  overload: Diploma.Domain.Models.Model.Id*
- uid: Diploma.Domain.Models.Model.Name
  commentId: P:Diploma.Domain.Models.Model.Name
  id: Name
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Model.Name
  fullName: Diploma.Domain.Models.Model.Name
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Name
    path: Diploma.Domain/Models/Model.cs
    startLine: 17
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the name of the model
  example: []
  syntax:
    content: public string Name { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Diploma.Domain.Models.Model.Name*
- uid: Diploma.Domain.Models.Model.Type
  commentId: P:Diploma.Domain.Models.Model.Type
  id: Type
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Model.Type
  fullName: Diploma.Domain.Models.Model.Type
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Type
    path: Diploma.Domain/Models/Model.cs
    startLine: 22
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the type of the model
  example: []
  syntax:
    content: public ModelType Type { get; init; }
    parameters: []
    return:
      type: Diploma.Domain.Models.ModelType
    content.vb: Public Property Type As ModelType
  overload: Diploma.Domain.Models.Model.Type*
- uid: Diploma.Domain.Models.Model.TrainingTime
  commentId: P:Diploma.Domain.Models.Model.TrainingTime
  id: TrainingTime
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: TrainingTime
  nameWithType: Model.TrainingTime
  fullName: Diploma.Domain.Models.Model.TrainingTime
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: TrainingTime
    path: Diploma.Domain/Models/Model.cs
    startLine: 27
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the training time range for this model
  example: []
  syntax:
    content: public TrainingTimeRange TrainingTime { get; init; }
    parameters: []
    return:
      type: Diploma.Domain.Models.TrainingTimeRange
    content.vb: Public Property TrainingTime As TrainingTimeRange
  overload: Diploma.Domain.Models.Model.TrainingTime*
- uid: Diploma.Domain.Models.Model.Algorithms
  commentId: P:Diploma.Domain.Models.Model.Algorithms
  id: Algorithms
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: Algorithms
  nameWithType: Model.Algorithms
  fullName: Diploma.Domain.Models.Model.Algorithms
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Algorithms
    path: Diploma.Domain/Models/Model.cs
    startLine: 32
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the list of algorithms associated with this model
  example: []
  syntax:
    content: public virtual List<Algorithm> Algorithms { get; init; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm}
    content.vb: Public Overridable Property Algorithms As List(Of Algorithm)
  overload: Diploma.Domain.Models.Model.Algorithms*
- uid: Diploma.Domain.Models.Model.#ctor
  commentId: M:Diploma.Domain.Models.Model.#ctor
  id: '#ctor'
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: Model()
  nameWithType: Model.Model()
  fullName: Diploma.Domain.Models.Model.Model()
  type: Constructor
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: .ctor
    path: Diploma.Domain/Models/Model.cs
    startLine: 37
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Parameterless constructor required by Entity Framework
  example: []
  syntax:
    content: public Model()
    content.vb: Public Sub New()
  overload: Diploma.Domain.Models.Model.#ctor*
  nameWithType.vb: Model.New()
  fullName.vb: Diploma.Domain.Models.Model.New()
  name.vb: New()
- uid: Diploma.Domain.Models.Model.#ctor(System.String,Diploma.Domain.Models.ModelType,Diploma.Domain.Models.TrainingTimeRange,System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm},System.Nullable{System.Guid})
  commentId: M:Diploma.Domain.Models.Model.#ctor(System.String,Diploma.Domain.Models.ModelType,Diploma.Domain.Models.TrainingTimeRange,System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm},System.Nullable{System.Guid})
  id: '#ctor(System.String,Diploma.Domain.Models.ModelType,Diploma.Domain.Models.TrainingTimeRange,System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm},System.Nullable{System.Guid})'
  parent: Diploma.Domain.Models.Model
  langs:
  - csharp
  - vb
  name: Model(string, ModelType, TrainingTimeRange, List<Algorithm>, Guid?)
  nameWithType: Model.Model(string, ModelType, TrainingTimeRange, List<Algorithm>, Guid?)
  fullName: Diploma.Domain.Models.Model.Model(string, Diploma.Domain.Models.ModelType, Diploma.Domain.Models.TrainingTimeRange, System.Collections.Generic.List<Diploma.Domain.Algorithms.Algorithm>, System.Guid?)
  type: Constructor
  source:
    remote:
      path: Diploma.Domain/Models/Model.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: .ctor
    path: Diploma.Domain/Models/Model.cs
    startLine: 49
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Initializes a new instance of the <xref href="Diploma.Domain.Models.Model" data-throw-if-not-resolved="false"></xref> class
  example: []
  syntax:
    content: public Model(string name, ModelType type, TrainingTimeRange trainingTimeRange, List<Algorithm> algorithms, Guid? id = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the model.
    - id: type
      type: Diploma.Domain.Models.ModelType
      description: The type of the model.
    - id: trainingTimeRange
      type: Diploma.Domain.Models.TrainingTimeRange
      description: The training time range associated with the model
    - id: algorithms
      type: System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm}
      description: The list of algorithms associated with the model
    - id: id
      type: System.Nullable{System.Guid}
      description: The optional unique identifier. If null, a new GUID will be generated
    content.vb: Public Sub New(name As String, type As ModelType, trainingTimeRange As TrainingTimeRange, algorithms As List(Of Algorithm), id As Guid? = Nothing)
  overload: Diploma.Domain.Models.Model.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code class="paramref">name</code> is null or empty
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">trainingTimeRange</code> or <code class="paramref">algorithms</code> is null
  nameWithType.vb: Model.New(String, ModelType, TrainingTimeRange, List(Of Algorithm), Guid?)
  fullName.vb: Diploma.Domain.Models.Model.New(String, Diploma.Domain.Models.ModelType, Diploma.Domain.Models.TrainingTimeRange, System.Collections.Generic.List(Of Diploma.Domain.Algorithms.Algorithm), System.Guid?)
  name.vb: New(String, ModelType, TrainingTimeRange, List(Of Algorithm), Guid?)
references:
- uid: Diploma.Domain.Models
  commentId: N:Diploma.Domain.Models
  href: Diploma.html
  name: Diploma.Domain.Models
  nameWithType: Diploma.Domain.Models
  fullName: Diploma.Domain.Models
  spec.csharp:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Models
    name: Models
    href: Diploma.Domain.Models.html
  spec.vb:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Models
    name: Models
    href: Diploma.Domain.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Diploma.Domain.Models.Model.Id*
  commentId: Overload:Diploma.Domain.Models.Model.Id
  href: Diploma.Domain.Models.Model.html#Diploma_Domain_Models_Model_Id
  name: Id
  nameWithType: Model.Id
  fullName: Diploma.Domain.Models.Model.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Diploma.Domain.Models.Model.Name*
  commentId: Overload:Diploma.Domain.Models.Model.Name
  href: Diploma.Domain.Models.Model.html#Diploma_Domain_Models_Model_Name
  name: Name
  nameWithType: Model.Name
  fullName: Diploma.Domain.Models.Model.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Diploma.Domain.Models.Model.Type*
  commentId: Overload:Diploma.Domain.Models.Model.Type
  href: Diploma.Domain.Models.Model.html#Diploma_Domain_Models_Model_Type
  name: Type
  nameWithType: Model.Type
  fullName: Diploma.Domain.Models.Model.Type
- uid: Diploma.Domain.Models.ModelType
  commentId: T:Diploma.Domain.Models.ModelType
  parent: Diploma.Domain.Models
  href: Diploma.Domain.Models.ModelType.html
  name: ModelType
  nameWithType: ModelType
  fullName: Diploma.Domain.Models.ModelType
- uid: Diploma.Domain.Models.Model.TrainingTime*
  commentId: Overload:Diploma.Domain.Models.Model.TrainingTime
  href: Diploma.Domain.Models.Model.html#Diploma_Domain_Models_Model_TrainingTime
  name: TrainingTime
  nameWithType: Model.TrainingTime
  fullName: Diploma.Domain.Models.Model.TrainingTime
- uid: Diploma.Domain.Models.TrainingTimeRange
  commentId: T:Diploma.Domain.Models.TrainingTimeRange
  parent: Diploma.Domain.Models
  href: Diploma.Domain.Models.TrainingTimeRange.html
  name: TrainingTimeRange
  nameWithType: TrainingTimeRange
  fullName: Diploma.Domain.Models.TrainingTimeRange
- uid: Diploma.Domain.Models.Model.Algorithms*
  commentId: Overload:Diploma.Domain.Models.Model.Algorithms
  href: Diploma.Domain.Models.Model.html#Diploma_Domain_Models_Model_Algorithms
  name: Algorithms
  nameWithType: Model.Algorithms
  fullName: Diploma.Domain.Models.Model.Algorithms
- uid: System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm}
  commentId: T:System.Collections.Generic.List{Diploma.Domain.Algorithms.Algorithm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Algorithm>
  nameWithType: List<Algorithm>
  fullName: System.Collections.Generic.List<Diploma.Domain.Algorithms.Algorithm>
  nameWithType.vb: List(Of Algorithm)
  fullName.vb: System.Collections.Generic.List(Of Diploma.Domain.Algorithms.Algorithm)
  name.vb: List(Of Algorithm)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Diploma.Domain.Algorithms.Algorithm
    name: Algorithm
    href: Diploma.Domain.Algorithms.Algorithm.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Diploma.Domain.Algorithms.Algorithm
    name: Algorithm
    href: Diploma.Domain.Algorithms.Algorithm.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Diploma.Domain.Models.Model.#ctor*
  commentId: Overload:Diploma.Domain.Models.Model.#ctor
  href: Diploma.Domain.Models.Model.html#Diploma_Domain_Models_Model__ctor
  name: Model
  nameWithType: Model.Model
  fullName: Diploma.Domain.Models.Model.Model
  nameWithType.vb: Model.New
  fullName.vb: Diploma.Domain.Models.Model.New
  name.vb: New
- uid: Diploma.Domain.Models.Model
  commentId: T:Diploma.Domain.Models.Model
  parent: Diploma.Domain.Models
  href: Diploma.Domain.Models.Model.html
  name: Model
  nameWithType: Model
  fullName: Diploma.Domain.Models.Model
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
