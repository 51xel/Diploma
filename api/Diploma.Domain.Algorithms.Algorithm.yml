### YamlMime:ManagedReference
items:
- uid: Diploma.Domain.Algorithms.Algorithm
  commentId: T:Diploma.Domain.Algorithms.Algorithm
  id: Algorithm
  parent: Diploma.Domain.Algorithms
  children:
  - Diploma.Domain.Algorithms.Algorithm.#ctor
  - Diploma.Domain.Algorithms.Algorithm.#ctor(Diploma.Domain.Algorithms.AlgorithmType,System.Collections.Generic.List{Diploma.Domain.Models.Model},System.Nullable{System.Guid})
  - Diploma.Domain.Algorithms.Algorithm.Id
  - Diploma.Domain.Algorithms.Algorithm.Models
  - Diploma.Domain.Algorithms.Algorithm.Type
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: Algorithm
  fullName: Diploma.Domain.Algorithms.Algorithm
  type: Class
  source:
    remote:
      path: Diploma.Domain/Algorithms/Algorithm.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Algorithm
    path: Diploma.Domain/Algorithms/Algorithm.cs
    startLine: 7
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Algorithms
  summary: Represents an algorithm with an associated type and related models
  example: []
  syntax:
    content: public class Algorithm
    content.vb: Public Class Algorithm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Diploma.Domain.Algorithms.Algorithm.Id
  commentId: P:Diploma.Domain.Algorithms.Algorithm.Id
  id: Id
  parent: Diploma.Domain.Algorithms.Algorithm
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Algorithm.Id
  fullName: Diploma.Domain.Algorithms.Algorithm.Id
  type: Property
  source:
    remote:
      path: Diploma.Domain/Algorithms/Algorithm.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Id
    path: Diploma.Domain/Algorithms/Algorithm.cs
    startLine: 12
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Algorithms
  summary: Gets the unique identifier of the algorithm
  example: []
  syntax:
    content: public Guid Id { get; init; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property Id As Guid
  overload: Diploma.Domain.Algorithms.Algorithm.Id*
- uid: Diploma.Domain.Algorithms.Algorithm.Type
  commentId: P:Diploma.Domain.Algorithms.Algorithm.Type
  id: Type
  parent: Diploma.Domain.Algorithms.Algorithm
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Algorithm.Type
  fullName: Diploma.Domain.Algorithms.Algorithm.Type
  type: Property
  source:
    remote:
      path: Diploma.Domain/Algorithms/Algorithm.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Type
    path: Diploma.Domain/Algorithms/Algorithm.cs
    startLine: 17
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Algorithms
  summary: Gets the type of the algorithm
  example: []
  syntax:
    content: public AlgorithmType Type { get; init; }
    parameters: []
    return:
      type: Diploma.Domain.Algorithms.AlgorithmType
    content.vb: Public Property Type As AlgorithmType
  overload: Diploma.Domain.Algorithms.Algorithm.Type*
- uid: Diploma.Domain.Algorithms.Algorithm.Models
  commentId: P:Diploma.Domain.Algorithms.Algorithm.Models
  id: Models
  parent: Diploma.Domain.Algorithms.Algorithm
  langs:
  - csharp
  - vb
  name: Models
  nameWithType: Algorithm.Models
  fullName: Diploma.Domain.Algorithms.Algorithm.Models
  type: Property
  source:
    remote:
      path: Diploma.Domain/Algorithms/Algorithm.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Models
    path: Diploma.Domain/Algorithms/Algorithm.cs
    startLine: 22
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Algorithms
  summary: Gets the list of models associated with this algorithm
  example: []
  syntax:
    content: public virtual List<Model> Models { get; init; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Diploma.Domain.Models.Model}
    content.vb: Public Overridable Property Models As List(Of Model)
  overload: Diploma.Domain.Algorithms.Algorithm.Models*
- uid: Diploma.Domain.Algorithms.Algorithm.#ctor
  commentId: M:Diploma.Domain.Algorithms.Algorithm.#ctor
  id: '#ctor'
  parent: Diploma.Domain.Algorithms.Algorithm
  langs:
  - csharp
  - vb
  name: Algorithm()
  nameWithType: Algorithm.Algorithm()
  fullName: Diploma.Domain.Algorithms.Algorithm.Algorithm()
  type: Constructor
  source:
    remote:
      path: Diploma.Domain/Algorithms/Algorithm.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: .ctor
    path: Diploma.Domain/Algorithms/Algorithm.cs
    startLine: 27
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Algorithms
  summary: Parameterless constructor required by Entity Framework
  example: []
  syntax:
    content: public Algorithm()
    content.vb: Public Sub New()
  overload: Diploma.Domain.Algorithms.Algorithm.#ctor*
  nameWithType.vb: Algorithm.New()
  fullName.vb: Diploma.Domain.Algorithms.Algorithm.New()
  name.vb: New()
- uid: Diploma.Domain.Algorithms.Algorithm.#ctor(Diploma.Domain.Algorithms.AlgorithmType,System.Collections.Generic.List{Diploma.Domain.Models.Model},System.Nullable{System.Guid})
  commentId: M:Diploma.Domain.Algorithms.Algorithm.#ctor(Diploma.Domain.Algorithms.AlgorithmType,System.Collections.Generic.List{Diploma.Domain.Models.Model},System.Nullable{System.Guid})
  id: '#ctor(Diploma.Domain.Algorithms.AlgorithmType,System.Collections.Generic.List{Diploma.Domain.Models.Model},System.Nullable{System.Guid})'
  parent: Diploma.Domain.Algorithms.Algorithm
  langs:
  - csharp
  - vb
  name: Algorithm(AlgorithmType, List<Model>, Guid?)
  nameWithType: Algorithm.Algorithm(AlgorithmType, List<Model>, Guid?)
  fullName: Diploma.Domain.Algorithms.Algorithm.Algorithm(Diploma.Domain.Algorithms.AlgorithmType, System.Collections.Generic.List<Diploma.Domain.Models.Model>, System.Guid?)
  type: Constructor
  source:
    remote:
      path: Diploma.Domain/Algorithms/Algorithm.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: .ctor
    path: Diploma.Domain/Algorithms/Algorithm.cs
    startLine: 36
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Algorithms
  summary: Initializes a new instance of the <xref href="Diploma.Domain.Algorithms.Algorithm" data-throw-if-not-resolved="false"></xref> class
  example: []
  syntax:
    content: public Algorithm(AlgorithmType type, List<Model> models, Guid? id = null)
    parameters:
    - id: type
      type: Diploma.Domain.Algorithms.AlgorithmType
      description: The type of the algorithm
    - id: models
      type: System.Collections.Generic.List{Diploma.Domain.Models.Model}
      description: The list of models associated with the algorithm
    - id: id
      type: System.Nullable{System.Guid}
      description: The optional unique identifier. If null, a new GUID will be generated
    content.vb: Public Sub New(type As AlgorithmType, models As List(Of Model), id As Guid? = Nothing)
  overload: Diploma.Domain.Algorithms.Algorithm.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">models</code> is null
  nameWithType.vb: Algorithm.New(AlgorithmType, List(Of Model), Guid?)
  fullName.vb: Diploma.Domain.Algorithms.Algorithm.New(Diploma.Domain.Algorithms.AlgorithmType, System.Collections.Generic.List(Of Diploma.Domain.Models.Model), System.Guid?)
  name.vb: New(AlgorithmType, List(Of Model), Guid?)
references:
- uid: Diploma.Domain.Algorithms
  commentId: N:Diploma.Domain.Algorithms
  href: Diploma.html
  name: Diploma.Domain.Algorithms
  nameWithType: Diploma.Domain.Algorithms
  fullName: Diploma.Domain.Algorithms
  spec.csharp:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Algorithms
    name: Algorithms
    href: Diploma.Domain.Algorithms.html
  spec.vb:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Algorithms
    name: Algorithms
    href: Diploma.Domain.Algorithms.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Diploma.Domain.Algorithms.Algorithm.Id*
  commentId: Overload:Diploma.Domain.Algorithms.Algorithm.Id
  href: Diploma.Domain.Algorithms.Algorithm.html#Diploma_Domain_Algorithms_Algorithm_Id
  name: Id
  nameWithType: Algorithm.Id
  fullName: Diploma.Domain.Algorithms.Algorithm.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Diploma.Domain.Algorithms.Algorithm.Type*
  commentId: Overload:Diploma.Domain.Algorithms.Algorithm.Type
  href: Diploma.Domain.Algorithms.Algorithm.html#Diploma_Domain_Algorithms_Algorithm_Type
  name: Type
  nameWithType: Algorithm.Type
  fullName: Diploma.Domain.Algorithms.Algorithm.Type
- uid: Diploma.Domain.Algorithms.AlgorithmType
  commentId: T:Diploma.Domain.Algorithms.AlgorithmType
  parent: Diploma.Domain.Algorithms
  href: Diploma.Domain.Algorithms.AlgorithmType.html
  name: AlgorithmType
  nameWithType: AlgorithmType
  fullName: Diploma.Domain.Algorithms.AlgorithmType
- uid: Diploma.Domain.Algorithms.Algorithm.Models*
  commentId: Overload:Diploma.Domain.Algorithms.Algorithm.Models
  href: Diploma.Domain.Algorithms.Algorithm.html#Diploma_Domain_Algorithms_Algorithm_Models
  name: Models
  nameWithType: Algorithm.Models
  fullName: Diploma.Domain.Algorithms.Algorithm.Models
- uid: System.Collections.Generic.List{Diploma.Domain.Models.Model}
  commentId: T:System.Collections.Generic.List{Diploma.Domain.Models.Model}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Model>
  nameWithType: List<Model>
  fullName: System.Collections.Generic.List<Diploma.Domain.Models.Model>
  nameWithType.vb: List(Of Model)
  fullName.vb: System.Collections.Generic.List(Of Diploma.Domain.Models.Model)
  name.vb: List(Of Model)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Diploma.Domain.Models.Model
    name: Model
    href: Diploma.Domain.Models.Model.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Diploma.Domain.Models.Model
    name: Model
    href: Diploma.Domain.Models.Model.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Diploma.Domain.Algorithms.Algorithm.#ctor*
  commentId: Overload:Diploma.Domain.Algorithms.Algorithm.#ctor
  href: Diploma.Domain.Algorithms.Algorithm.html#Diploma_Domain_Algorithms_Algorithm__ctor
  name: Algorithm
  nameWithType: Algorithm.Algorithm
  fullName: Diploma.Domain.Algorithms.Algorithm.Algorithm
  nameWithType.vb: Algorithm.New
  fullName.vb: Diploma.Domain.Algorithms.Algorithm.New
  name.vb: New
- uid: Diploma.Domain.Algorithms.Algorithm
  commentId: T:Diploma.Domain.Algorithms.Algorithm
  href: Diploma.Domain.Algorithms.Algorithm.html
  name: Algorithm
  nameWithType: Algorithm
  fullName: Diploma.Domain.Algorithms.Algorithm
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
