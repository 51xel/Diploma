### YamlMime:ManagedReference
items:
- uid: Diploma.Domain.Models.TrainingTimeRange
  commentId: T:Diploma.Domain.Models.TrainingTimeRange
  id: TrainingTimeRange
  parent: Diploma.Domain.Models
  children:
  - Diploma.Domain.Models.TrainingTimeRange.#ctor
  - Diploma.Domain.Models.TrainingTimeRange.#ctor(Diploma.Domain.Common.Models.TimeRangeType,System.DateTime,System.DateTime)
  - Diploma.Domain.Models.TrainingTimeRange.From
  - Diploma.Domain.Models.TrainingTimeRange.To
  - Diploma.Domain.Models.TrainingTimeRange.Type
  langs:
  - csharp
  - vb
  name: TrainingTimeRange
  nameWithType: TrainingTimeRange
  fullName: Diploma.Domain.Models.TrainingTimeRange
  type: Class
  source:
    remote:
      path: Diploma.Domain/Models/TrainingTimeRange.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: TrainingTimeRange
    path: Diploma.Domain/Models/TrainingTimeRange.cs
    startLine: 8
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Represents a time range used for training models
  example: []
  syntax:
    content: public class TrainingTimeRange
    content.vb: Public Class TrainingTimeRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Diploma.Domain.Models.TrainingTimeRange.Type
  commentId: P:Diploma.Domain.Models.TrainingTimeRange.Type
  id: Type
  parent: Diploma.Domain.Models.TrainingTimeRange
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TrainingTimeRange.Type
  fullName: Diploma.Domain.Models.TrainingTimeRange.Type
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/TrainingTimeRange.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: Type
    path: Diploma.Domain/Models/TrainingTimeRange.cs
    startLine: 13
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the type of time range (e.g., seconds, minutes, days, etc.)
  example: []
  syntax:
    content: public TimeRangeType Type { get; init; }
    parameters: []
    return:
      type: Diploma.Domain.Common.Models.TimeRangeType
    content.vb: Public Property Type As TimeRangeType
  overload: Diploma.Domain.Models.TrainingTimeRange.Type*
- uid: Diploma.Domain.Models.TrainingTimeRange.From
  commentId: P:Diploma.Domain.Models.TrainingTimeRange.From
  id: From
  parent: Diploma.Domain.Models.TrainingTimeRange
  langs:
  - csharp
  - vb
  name: From
  nameWithType: TrainingTimeRange.From
  fullName: Diploma.Domain.Models.TrainingTimeRange.From
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/TrainingTimeRange.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: From
    path: Diploma.Domain/Models/TrainingTimeRange.cs
    startLine: 18
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the start date and time of the training period
  example: []
  syntax:
    content: public DateTime From { get; init; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property From As Date
  overload: Diploma.Domain.Models.TrainingTimeRange.From*
- uid: Diploma.Domain.Models.TrainingTimeRange.To
  commentId: P:Diploma.Domain.Models.TrainingTimeRange.To
  id: To
  parent: Diploma.Domain.Models.TrainingTimeRange
  langs:
  - csharp
  - vb
  name: To
  nameWithType: TrainingTimeRange.To
  fullName: Diploma.Domain.Models.TrainingTimeRange.To
  type: Property
  source:
    remote:
      path: Diploma.Domain/Models/TrainingTimeRange.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: To
    path: Diploma.Domain/Models/TrainingTimeRange.cs
    startLine: 23
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Gets the end date and time of the training period
  example: []
  syntax:
    content: public DateTime To { get; init; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property [To] As Date
  overload: Diploma.Domain.Models.TrainingTimeRange.To*
- uid: Diploma.Domain.Models.TrainingTimeRange.#ctor
  commentId: M:Diploma.Domain.Models.TrainingTimeRange.#ctor
  id: '#ctor'
  parent: Diploma.Domain.Models.TrainingTimeRange
  langs:
  - csharp
  - vb
  name: TrainingTimeRange()
  nameWithType: TrainingTimeRange.TrainingTimeRange()
  fullName: Diploma.Domain.Models.TrainingTimeRange.TrainingTimeRange()
  type: Constructor
  source:
    remote:
      path: Diploma.Domain/Models/TrainingTimeRange.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: .ctor
    path: Diploma.Domain/Models/TrainingTimeRange.cs
    startLine: 28
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Parameterless constructor required by Entity Framework
  example: []
  syntax:
    content: public TrainingTimeRange()
    content.vb: Public Sub New()
  overload: Diploma.Domain.Models.TrainingTimeRange.#ctor*
  nameWithType.vb: TrainingTimeRange.New()
  fullName.vb: Diploma.Domain.Models.TrainingTimeRange.New()
  name.vb: New()
- uid: Diploma.Domain.Models.TrainingTimeRange.#ctor(Diploma.Domain.Common.Models.TimeRangeType,System.DateTime,System.DateTime)
  commentId: M:Diploma.Domain.Models.TrainingTimeRange.#ctor(Diploma.Domain.Common.Models.TimeRangeType,System.DateTime,System.DateTime)
  id: '#ctor(Diploma.Domain.Common.Models.TimeRangeType,System.DateTime,System.DateTime)'
  parent: Diploma.Domain.Models.TrainingTimeRange
  langs:
  - csharp
  - vb
  name: TrainingTimeRange(TimeRangeType, DateTime, DateTime)
  nameWithType: TrainingTimeRange.TrainingTimeRange(TimeRangeType, DateTime, DateTime)
  fullName: Diploma.Domain.Models.TrainingTimeRange.TrainingTimeRange(Diploma.Domain.Common.Models.TimeRangeType, System.DateTime, System.DateTime)
  type: Constructor
  source:
    remote:
      path: Diploma.Domain/Models/TrainingTimeRange.cs
      branch: documantation
      repo: https://github.com/51xel/Diploma.git
    id: .ctor
    path: Diploma.Domain/Models/TrainingTimeRange.cs
    startLine: 38
  assemblies:
  - Diploma.Domain
  namespace: Diploma.Domain.Models
  summary: Initializes a new instance of the <xref href="Diploma.Domain.Models.TrainingTimeRange" data-throw-if-not-resolved="false"></xref> class
  example: []
  syntax:
    content: public TrainingTimeRange(TimeRangeType trainingTimeRangeType, DateTime from, DateTime to)
    parameters:
    - id: trainingTimeRangeType
      type: Diploma.Domain.Common.Models.TimeRangeType
      description: The type of time range used for training
    - id: from
      type: System.DateTime
      description: The start date and time of the training period
    - id: to
      type: System.DateTime
      description: The end date and time of the training period
    content.vb: Public Sub New(trainingTimeRangeType As TimeRangeType, from As Date, [to] As Date)
  overload: Diploma.Domain.Models.TrainingTimeRange.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">from</code> is greater than or equal to <code class="paramref">to</code> 
          or if the specified time range type is invalid for the given dates
  nameWithType.vb: TrainingTimeRange.New(TimeRangeType, Date, Date)
  fullName.vb: Diploma.Domain.Models.TrainingTimeRange.New(Diploma.Domain.Common.Models.TimeRangeType, Date, Date)
  name.vb: New(TimeRangeType, Date, Date)
references:
- uid: Diploma.Domain.Models
  commentId: N:Diploma.Domain.Models
  href: Diploma.html
  name: Diploma.Domain.Models
  nameWithType: Diploma.Domain.Models
  fullName: Diploma.Domain.Models
  spec.csharp:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Models
    name: Models
    href: Diploma.Domain.Models.html
  spec.vb:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Models
    name: Models
    href: Diploma.Domain.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Diploma.Domain.Models.TrainingTimeRange.Type*
  commentId: Overload:Diploma.Domain.Models.TrainingTimeRange.Type
  href: Diploma.Domain.Models.TrainingTimeRange.html#Diploma_Domain_Models_TrainingTimeRange_Type
  name: Type
  nameWithType: TrainingTimeRange.Type
  fullName: Diploma.Domain.Models.TrainingTimeRange.Type
- uid: Diploma.Domain.Common.Models.TimeRangeType
  commentId: T:Diploma.Domain.Common.Models.TimeRangeType
  parent: Diploma.Domain.Common.Models
  href: Diploma.Domain.Common.Models.TimeRangeType.html
  name: TimeRangeType
  nameWithType: TimeRangeType
  fullName: Diploma.Domain.Common.Models.TimeRangeType
- uid: Diploma.Domain.Common.Models
  commentId: N:Diploma.Domain.Common.Models
  href: Diploma.html
  name: Diploma.Domain.Common.Models
  nameWithType: Diploma.Domain.Common.Models
  fullName: Diploma.Domain.Common.Models
  spec.csharp:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Common
    name: Common
    href: Diploma.Domain.Common.html
  - name: .
  - uid: Diploma.Domain.Common.Models
    name: Models
    href: Diploma.Domain.Common.Models.html
  spec.vb:
  - uid: Diploma
    name: Diploma
    href: Diploma.html
  - name: .
  - uid: Diploma.Domain
    name: Domain
    href: Diploma.Domain.html
  - name: .
  - uid: Diploma.Domain.Common
    name: Common
    href: Diploma.Domain.Common.html
  - name: .
  - uid: Diploma.Domain.Common.Models
    name: Models
    href: Diploma.Domain.Common.Models.html
- uid: Diploma.Domain.Models.TrainingTimeRange.From*
  commentId: Overload:Diploma.Domain.Models.TrainingTimeRange.From
  href: Diploma.Domain.Models.TrainingTimeRange.html#Diploma_Domain_Models_TrainingTimeRange_From
  name: From
  nameWithType: TrainingTimeRange.From
  fullName: Diploma.Domain.Models.TrainingTimeRange.From
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Diploma.Domain.Models.TrainingTimeRange.To*
  commentId: Overload:Diploma.Domain.Models.TrainingTimeRange.To
  href: Diploma.Domain.Models.TrainingTimeRange.html#Diploma_Domain_Models_TrainingTimeRange_To
  name: To
  nameWithType: TrainingTimeRange.To
  fullName: Diploma.Domain.Models.TrainingTimeRange.To
- uid: Diploma.Domain.Models.TrainingTimeRange.#ctor*
  commentId: Overload:Diploma.Domain.Models.TrainingTimeRange.#ctor
  href: Diploma.Domain.Models.TrainingTimeRange.html#Diploma_Domain_Models_TrainingTimeRange__ctor
  name: TrainingTimeRange
  nameWithType: TrainingTimeRange.TrainingTimeRange
  fullName: Diploma.Domain.Models.TrainingTimeRange.TrainingTimeRange
  nameWithType.vb: TrainingTimeRange.New
  fullName.vb: Diploma.Domain.Models.TrainingTimeRange.New
  name.vb: New
- uid: Diploma.Domain.Models.TrainingTimeRange
  commentId: T:Diploma.Domain.Models.TrainingTimeRange
  parent: Diploma.Domain.Models
  href: Diploma.Domain.Models.TrainingTimeRange.html
  name: TrainingTimeRange
  nameWithType: TrainingTimeRange
  fullName: Diploma.Domain.Models.TrainingTimeRange
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
